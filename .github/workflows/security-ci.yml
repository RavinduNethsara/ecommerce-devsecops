
name: DevSecOps CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  sca_sast_tests:
    name: SCA + SAST + Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pytest bandit pip-audit

      - name: Install project (if present)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Software Composition Analysis (pip-audit)
        run: |
          pip-audit -r requirements.txt || true
        # Remove '|| true' to fail on vulnerabilities.

      - name: Static Analysis (Bandit)
        run: |
          bandit -r . -f txt -o bandit-report.txt || true
        # Remove '|| true' to fail on HIGH severity findings.

      - name: Unit Tests (pytest)
        run: |
          pytest -q

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.txt

  container_build_trivy:
    name: Build Container + Trivy Scan
    runs-on: ubuntu-latest
    needs: sca_sast_tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          docker build -t ecommerce-app:ci -f Dockerfile .

      - name: Trivy Scan (Filesystem)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          exit-code: '0'

      - name: Trivy Scan (Image)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'ecommerce-app:ci'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          exit-code: '0'

  dast_zap:
    name: DAST with OWASP ZAP Baseline
    runs-on: ubuntu-latest
    needs: container_build_trivy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start simple demo server (for DAST target)
        run: |
          python -m http.server 8000 &
          sleep 3

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_html.html
            owasp-zap-baseline.report
